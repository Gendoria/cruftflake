{"name":"Cruftflake","tagline":"ID generator","body":"# CruftFlake\r\n\r\n[![Build Status](https://img.shields.io/travis/Gendoria/cruftflake/master.svg)](https://travis-ci.org/Gendoria/cruftflake)\r\n[![Scrutinizer Code Quality](https://img.shields.io/scrutinizer/g/Gendoria/cruftflake.svg)](https://scrutinizer-ci.com/g/Gendoria/cruftflake/?branch=master)\r\n[![Code Coverage](https://img.shields.io/scrutinizer/coverage/g/Gendoria/cruftflake.svg)](https://scrutinizer-ci.com/g/Gendoria/cruftflake/?branch=master)\r\n\r\nA stab at a version of [Twitter Snowflake](https://github.com/twitter/snowflake)\r\nbut in PHP with a simple ZeroMQ interface (rather than Thrift).\r\n\r\nThis is a serous rewrite of [https://github.com/dvomedia/cruftflake](https://github.com/dvomedia/cruftflake).\r\nIt organizes the code in modules and adds several interfaces, allowing easier extension\r\nof other server mechanisms.\r\n\r\n## Implementation\r\n\r\nThis project was motivated by personal curiosity and also my [inability to\r\nget Twitter's project to build](https://github.com/twitter/snowflake/issues/8).\r\n\r\nThe implementation copies Twitter - generating 64 bit IDs.\r\n\r\n  - time - 41 bits\r\n  - configured machine ID - 10 bits\r\n  - sequence number - 12 bits\r\n\r\nHas a custom epoch that means it can generate IDs until 2081-09-06 (not the\r\nsame epoch as Snowflake).\r\n\r\n### ZooKeeper for config coordination\r\n\r\nWe use ZooKeeper to store which machine IDs are in use. When a new node starts\r\nup for the first time it **must** be able to contact the ZooKeeper cluster\r\nand create a new node. It will look at all the existing nodes and then (if it\r\ncan't find its own Mac Address) attempt to claim a free one.\r\n\r\nI was using Ephemeral nodes for this - similar(ish) to a lock pattern but this\r\nhad the issue that the node needed to remain connected to ZK throughout its\r\nlifetime -- this way it doesn't.\r\n\r\nThe downside is that potentially the 1024 possible machine IDs will \"fill up\"\r\nand need to be manually pruned.\r\n\r\n## Running\r\n\r\nInstallation via composer:\r\n\r\n```json\r\n\t{\r\n    \t\"require\": {\r\n\t        \"gendoria/cruftflake\": \"*\"\r\n\t\t}\r\n\t}\r\n```\r\n\r\nThere are several example scripts provided for playing about with.\r\nBoth require previous composer update.\r\n\r\n1. The generator (the server)\r\n\r\n    ```shell\r\n        ./examples/server.php\r\n    ```\r\n2. A client, that will generate N IDs and dump to STDOUT\r\n\r\n    ```shell\r\n    ./examples/client.php -n 100\r\n    ```\r\n3. A client, that will ask server for generator status\r\n\r\n    ```shell\r\n    ./examples/status.php\r\n    ```\r\n\r\nFor client examples to work, server example has to be be running.\r\n    \r\n## Dependencies\r\n\r\n* ZeroMQ\r\n* ZooKeeper (if you want to use centralized configuration)\r\n\r\nComposer requires php-zmq module installed, but currently does not require zookeper.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}